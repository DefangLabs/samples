name: Deploy Changed Samples

on:
  pull_request:
    paths:
      - 'samples/**'

jobs:
  deploy_samples:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      DEFANG_FABRIC: fabric-staging.defang.dev:443
    concurrency:
      group: deploy_samples-group-${{ github.head_ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Fetch main branch
        run: git fetch origin main:main # Fetch the main branch reference for comparison

      - name: Identify changed samples
        run: |
          echo "Identifying changed samples..."
          bash scripts/changed-samples.sh > changed_samples.txt

      - name: Install defang
        shell: bash
        run: . <(curl -Lf https://raw.githubusercontent.com/DefangLabs/defang/main/src/bin/install || echo return $?)
        env:
          GH_TOKEN: ${{ github.token }} # avoid rate-limits

      - name: Login to Defang
        shell: bash
        run: |
          defang login
          defang whoami

      - name: Deprovision any previously running projects
        run: |
          echo "Deprovisioning any previously running projects..."
          CURRENTLY_RUNNING_PROJECT=$(defang ls | grep -v '^ \* ' | head -n1 | awk '{print $2}')
          # if CURRENTLY_RUNNING_PROJECT is not empty, deprovision it
          if [ -n "$CURRENTLY_RUNNING_PROJECT" ]; then
            defang down --detach --project-name=$CURRENTLY_RUNNING_PROJECT
          fi

      - name: Deploy Samples
        shell: bash
        env:
          TEST_AWS_ACCESS_KEY: ${{ secrets.TEST_AWS_ACCESS_KEY }}
          TEST_AWS_SECRET_KEY: ${{ secrets.TEST_AWS_SECRET_KEY }}
          TEST_BOARD_PASSWORD: ${{ secrets.TEST_BOARD_PASSWORD }}
          TEST_DATABASE_HOST: ${{ secrets.TEST_DATABASE_HOST }}
          TEST_DATABASE_NAME: ${{ secrets.TEST_DATABASE_NAME }}
          TEST_DATABASE_PASSWORD: ${{ secrets.TEST_DATABASE_PASSWORD }}
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          TEST_DATABASE_USERNAME: ${{ secrets.TEST_DATABASE_USERNAME }}
          TEST_HASURA_GRAPHQL_ADMIN_SECRET: ${{ secrets.TEST_HASURA_GRAPHQL_ADMIN_SECRET }}
          TEST_HASURA_GRAPHQL_DATABASE_URL: ${{ secrets.TEST_HASURA_GRAPHQL_DATABASE_URL }}
          TEST_HF_TOKEN: ${{ secrets.TEST_HF_TOKEN }}
          TEST_MB_DB_DBNAME: ${{ secrets.TEST_MB_DB_DBNAME }}
          TEST_MB_DB_HOST: ${{ secrets.TEST_MB_DB_HOST }}
          TEST_MB_DB_PASS: ${{ secrets.TEST_MB_DB_PASS }}
          TEST_MB_DB_PORT: ${{ secrets.TEST_MB_DB_PORT }}
          TEST_MB_DB_USER: ${{ secrets.TEST_MB_DB_USER }}
          TEST_NC_DB: ${{ secrets.TEST_NC_DB }}
          TEST_NC_S3_ENDPOINT: ${{ secrets.TEST_NC_S3_ENDPOINT }}
          TEST_NC_S3_BUCKET_NAME: ${{ secrets.TEST_NC_S3_BUCKET_NAME }}
          TEST_NC_S3_REGION: ${{ secrets.TEST_NC_S3_REGION }}
          TEST_NC_S3_ACCESS_KEY: ${{ secrets.TEST_NC_S3_ACCESS_KEY }}
          TEST_NC_S3_ACCESS_SECRET: ${{ secrets.TEST_NC_S3_ACCESS_SECRET }}
          TEST_OPENAI_KEY: ${{ secrets.TEST_OPENAI_KEY }}
          TEST_POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
          TEST_QUEUE: ${{ secrets.TEST_QUEUE }}
          TEST_SECRET_KEY_BASE: ${{ secrets.TEST_SECRET_KEY_BASE }}
          TEST_SESSION_SECRET: ${{ secrets.TEST_SESSION_SECRET }}
          TEST_SLACK_CHANNEL_ID: ${{ secrets.TEST_SLACK_CHANNEL_ID }}
          TEST_SLACK_TOKEN: ${{ secrets.TEST_SLACK_TOKEN }}
        run: |
          echo "DEFANG_DEBUG=$RUNNER_DEBUG" >> $GITHUB_ENV
          CHANGED_FILES=$(cat changed_samples.txt)
          echo "changed samples"
          echo $CHANGED_FILES
          FAILED_SAMPLES=()

          # Iterate over the changed samples and deploy them one at a time
          for sample in $CHANGED_FILES; do
            echo "Deploying $sample"

            # detect missing config values and set them from the environment
            # defang config FOO set -e TEST_FOO

            if ! bash scripts/deploy-sample.sh $sample; then
              echo "Failed to deploy and deprovision $sample"
              FAILED_SAMPLES+=($sample)
            fi
          done

          if [ ${#FAILED_SAMPLES[@]} -gt 0 ]; then
            echo "Failed to deploy the following samples: ${FAILED_SAMPLES[@]}"
            exit 1
          fi
